TCP 粘包/拆包：
TCP 是一个流协议，所谓流，就是没有界限的一串数据。
TCP 底层并不了解业务数据的具体含义，它会根据 TCP缓冲区的实际情况进行包的划分
所以在业务上认为，一个完整的包可能会被 TCP拆分成多个包进行发送，也有可能把多个小的包封装成一个大的数据包发送
这就是所谓的 TCP粘包和拆包问题


产生 TCP粘包/拆包问题的原因：
1、应用程序 write写入的字节大小大于 socket发送的缓冲区大小
2、进行 MSS大小的TCP分段
    MSS是最大报文段长度，是 TCP协议定义的一个选项，用于在 TCP连接建立时，收发双方协商通信时每一个报文段所能承载的最大数据长度
           选项位于报文段的最后，且长度必须为字节的整数倍
3、以太网帧的 payload大于 MTU进行 IP分片
    payload 有效荷载；MTU 最大传输单元，指一种通信协议的某一层上面所能通过的最大数据包大小（以字节为单位）


粘包问题解决策略：
1、消息定长，例如每个报文的大小固定长度200字节，如果不够，空位补空格；
2、在包尾增加回车换行符进行分割，例如 FTP协议
3、将消息分为消息头和消息体，消息头中包含消息总长度（或消息体长度）的字段，通常设计思路为消息头的第一个字段使用int32来表示消息的总长度
4、更复杂的应用层协议
