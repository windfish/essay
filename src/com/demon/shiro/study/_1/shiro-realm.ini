[main]
# 配置多个realm 的验证策略，注意：要先配置策略，再配置realms
# 指定securityManager 的authenticator 实现，ModularRealmAuthenticator 默认使用AtLeastOneSuccessfulStrategy 策略，一个Realm 验证成功就可以
#authenticator=org.apache.shiro.authc.pam.ModularRealmAuthenticator  
#securityManager.authenticator=$authenticator  

# 指定securityManager.authenticator的authenticationStrategy
# AtLeastOneSuccessfulStrategy 策略，只有一个realm 成功即可，但是会返回所有认证信息
#atLeastOneSuccessfulStrategy=org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy
#securityManager.authenticator.authenticationStrategy=$atLeastOneSuccessfulStrategy

# AllSuccessfulStrategy 策略，所有Realm 验证成功才可以
#allSuccessfulStrategy=org.apache.shiro.authc.pam.AllSuccessfulStrategy
#securityManager.authenticator.authenticationStrategy=$allSuccessfulStrategy

# FirstSuccessfulStrategy 策略，有一个Realm 成功，其他的忽略
firstSuccessfulStrategy=org.apache.shiro.authc.pam.FirstSuccessfulStrategy
securityManager.authenticator.authenticationStrategy=$firstSuccessfulStrategy

# 声明realm
myRealm1=com.demon.shiro.study._1._2_MyRealm1
myRealm2=com.demon.shiro.study._1._2_MyRealm2

# 指定securityManager 的realms 实现，支持多realm 配置。若不配置，则按声明顺序
securityManager.realms=$myRealm1,$myRealm2

