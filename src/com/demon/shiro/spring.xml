<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
				http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
				http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

	<context:component-scan base-package="com.demon.shiro" />
	
	<bean id="myRealm" class="org.apache.shiro.realm.text.IniRealm">
	   <property name="resourcePath" value="classpath:com/demon/shiro/shiro.ini" />
	</bean>
	
	<bean id="securityManager" class="org.apache.shiro.mgt.DefaultSecurityManager">
	   <!-- 单realm应用。如果有多个realm，使用‘realms’属性代替 -->
	   <property name="realm" ref="myRealm"/>
	</bean>
	
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	<!-- 开启Shiro注解的Spring配置方式的beans。在lifecycleBeanPostProcessor之后运行 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
	    <property name="securityManager" ref="securityManager"/>
	</bean>
	
	<!-- 最简单的集成，是将securityManager bean配置成一个静态单例，也就是让            SecurityUtils.* 
	           下的所有方法在任何情况下都起作用。在web应用中不要将securityManager bean配置为静态单例，具体方式请参阅下文中的‘Web Application’部分
	 -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	   <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
	   <property name="arguments" ref="securityManager"/>
	</bean>
	
</beans>